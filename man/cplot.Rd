% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cplot.R, R/cplot_clm.R, R/cplot_glm.R,
%   R/cplot_lm.R, R/cplot_loess.R, R/cplot_polr.R
\name{cplot}
\alias{cplot}
\alias{cplot.clm}
\alias{cplot_extract.glm}
\alias{cplot_extract.lm}
\alias{cplot_extract.loess}
\alias{cplot_extract.multinom}
\title{Conditional predicted value and average marginal effect plots for models}
\usage{
cplot(object, x = NULL, dx = NULL, data = NULL,
  what = c("prediction", "effect", "classprediction",
  "stackedprediction"), type = c("response", "link"),
  vcov = stats::vcov(object), level = 0.95, draw = TRUE,
  colour = "black", linetype = 1, size = 0.5, xvals = NULL,
  n = 25, at = NULL, ...)

cplot.clm(object, x = attributes(terms(object))[["term.labels"]][1L],
  dx = x, what = c("prediction", "classprediction",
  "stackedprediction", "effect"), data = prediction::find_data(object),
  type = c("response", "link"), vcov = stats::vcov(object), at,
  n = 25L, xvals = seq_range(data[[x]], n = n), level = 0.95,
  draw = TRUE, xlab = x, ylab = if (match.arg(what) == "effect")
  paste0("Marginal effect of ", dx) else paste0("Predicted value"),
  xlim = NULL, ylim = if (match.arg(what) \%in\% c("prediction",
  "stackedprediction")) c(0, 1.04) else NULL, lwd = 1L, col = "black",
  lty = 1L, factor.lty = 1L, factor.pch = 19L, factor.col = col,
  factor.fill = factor.col, factor.cex = 1L, xaxs = "i",
  yaxs = xaxs, las = 1L, scatter = FALSE, scatter.pch = 19L,
  scatter.col = factor.col, scatter.bg = scatter.col,
  scatter.cex = 0.5, rug = TRUE, rug.col = col, rug.size = -0.02,
  ...)

\method{cplot_extract}{glm}(object, data, dx, level, xvar, at, n, type,
  xvals, vcov, what, ...)

\method{cplot_extract}{lm}(object, data, dx, level, xvar, at, n, type,
  xvals, vcov, what, ...)

\method{cplot_extract}{loess}(object, data, dx, level, xvar, at, n, type,
  xvals, vcov, what, ...)

\method{cplot_extract}{multinom}(object, data, dx, level, xvar, at, n,
  type, xvals, vcov, what = c("prediction", "classprediction",
  "stackedprediction", "effect"), ...)
}
\arguments{
\item{object}{A model object.}

\item{x}{A character string specifying the name of variable to use as the
x-axis dimension in the plot.}

\item{dx}{If \code{what = "effect"}, the variable whose conditional marginal
effect should be displayed. By default it is \code{x} (so the plot displays
the marginal effect of \code{x} across values of \code{x}); ignored
otherwise. If \code{dx} is a factor with more than 2 levels, an error will
be issued.}

\item{data}{A data frame to override the default value offered in
\code{object[["model"]]}.}

\item{what}{A character string specifying whether to draw a
\dQuote{prediction} (fitted values from the model, calculated using
\code{\link[stats]{predict}}) or an \dQuote{effect} (average marginal effect
of \code{dx} conditional on \code{x}, using \code{\link{margins}}). Methods
for classes other than \dQuote{lm} or \dQuote{glm} may provided additional
options (e.g., \code{cplot.polr()} provides \dQuote{stackedprediction} and
\dQuote{class} alternatives).}

\item{type}{A character string specifying whether to calculate predictions
on the response scale (default) or link (only relevant for non-linear
models).}

\item{vcov}{A matrix containing the variance-covariance matrix for estimated
model coefficients, or a function to perform the estimation with
\code{model} as its only argument.}

\item{level}{The confidence level required (used to draw uncertainty
bounds).}

\item{draw}{A logical (default \code{TRUE}), specifying whether to draw the
plot. If \code{FALSE}, the data used in drawing are returned as a list of
data.frames. This might be useful if you want to plot using an alternative
plotting package (e.g., ggplot2). Also, if set to value \dQuote{add}, then
the resulting data is added to the existing plot.}

\item{colour}{}

\item{linetype}{}

\item{size}{}

\item{xvals}{A numeric vector of values at which to calculate predictions or
marginal effects, if \code{x} is numeric. By default, it is calculated from
the data using \code{\link{seq_range}}. If \code{x} is a factor, this is
ignored, as is \code{n}.}

\item{n}{An integer specifying the number of points across \code{x} at which
to calculate the predicted value or marginal effect, when \code{x} is
numeric. Ignored otherwise.}

\item{at}{Currently ignored.}

\item{\dots}{Additional arguments passed to
\code{\link[ggplot2]{geom_pointrange}} if `x` is a factor, or
\code{\link[ggplot2]{geom_ribbon}} if `x` is continuous. For example,
\code{shape}, \code{fill}, \code{alpha}.}
}
\value{
A tidy data frame containing the data used to draw the plot. Use
\code{draw = FALSE} to simply generate the data structure for use elsewhere.
}
\description{
Draw one or more conditional effects plots reflecting
predictions or marginal effects from a model, conditional on a covariate.
Currently methods exist for \dQuote{lm}, \dQuote{glm}, \dQuote{loess} class
models.
}
\details{
Note that when \code{what = "prediction"}, the plots show
predictions holding values of the data at their mean or mode, whereas when
\code{what = "effect"} average marginal effects (i.e., at observed values)
are shown.

When examining generalized linear models (e.g., logistic regression models),
confidence intervals for predictions can fall outside of the response scale
(again, for logistic regression this means confidence intervals can exceed
the (0,1) bounds). This is consistent with the behavior of
\code{\link[stats]{predict}} but may not be desired. The examples (below)
show ways of constraining confidence intervals to these bounds.

The overall aesthetic is somewhat similar to to the output produced by the
\code{marginalModelPlot()} function in the
\bold{\href{https://cran.r-project.org/package=car}{car}} package.
}
\examples{
\dontrun{
require('datasets')
# prediction from several angles
m <- lm(Sepal.Length ~ Sepal.Width, data = iris)
cplot(m)

# more complex model
m <- lm(Sepal.Length ~ Sepal.Width * Petal.Width * I(Petal.Width ^ 2), 
        data = head(iris, 50))
## marginal effect of 'Petal.Width' across 'Petal.Width'
cplot(m, x = "Petal.Width", what = "effect", n = 10)

# factor independent variables
mtcars[["am"]] <- factor(mtcars[["am"]])
m <- lm(mpg ~ am * wt, data = mtcars)
## predicted values for each factor level
cplot(m, x = "am")
## marginal effect of each factor level across numeric variable
cplot(m, x = "wt", dx = "am", what = "effect")

# marginal effect of 'Petal.Width' across 'Sepal.Width'
## without drawing the plot
## this might be useful for using, e.g., ggplot2 for plotting
tmp <- cplot(m, x = "Sepal.Width", dx = "Petal.Width", 
             what = "effect", n = 10, draw = FALSE)
if (require("ggplot2")) {
  # use ggplot2 instead of base graphics
  ggplot(tmp, aes(x = Petal.Width, y = "effect")) + 
         geom_line(lwd = 2) + 
         geom_line(aes(y = effect + 1.96*se.effect)) + 
         geom_line(aes(y = effect - 1.96*se.effect))
}

# a non-linear model
m <- glm(am ~ wt*drat, data = mtcars, family = binomial)
cplot(m, x = "wt") # prediction (response scale)
cplot(m, x = "wt") # prediction (link scale)
if (require("ggplot2")) {
  # prediction (response scale, constrained to [0,1])
  cplotdat <- cplot(m, x = "wt", type = "link", draw = FALSE)
  ggplot(cplotdat, aes(x = xvals, y = plogis(yvals))) + 
         geom_line(lwd = 1.5) + 
         geom_line(aes(y = plogis(upper))) + 
         geom_line(aes(y = plotis(lower)))
}

# effects on linear predictor and outcome
cplot(m, x = "drat", dx = "wt", what = "effect", type = "link")
cplot(m, x = "drat", dx = "wt", what = "effect", type = "response")

# plot conditional predictions across a third factor
local({
  iris$long <- rbinom(nrow(iris), 1, 0.6)
  x <- glm(long ~ Sepal.Width*Species, data = iris)
  cplot(x, x = "Sepal.Width", data = iris[iris$Species == "setosa", ], 
        ylim = c(0,1), col = "red", se.fill = rgb(1,0,0,.5), xlim = c(2,4.5))
  cplot(x, x = "Sepal.Width", data = iris[iris$Species == "versicolor", ], 
        draw = "add", col = "blue", se.fill = rgb(0,1,0,.5))
  cplot(x, x = "Sepal.Width", data = iris[iris$Species == "virginica", ], 
        draw = "add", col = "green", se.fill = rgb(0,0,1,.5))
})

# ordinal outcome
if (require("MASS")) {
  # x is a factor variable
  house.plr <- polr(Sat ~ Infl + Type + Cont, weights = Freq, 
                    data = housing)
  ## predicted probabilities
  cplot(house.plr)
  ## cumulative predicted probabilities
  cplot(house.plr, what = "stacked")
  ## ggplot2 example
  if (require("ggplot2")) {
    ggplot(cplot(house.plr), aes(x = xvals, y = yvals, group = level)) + 
      geom_line(aes(color = level))
  }

  # x is continuous
  cyl.plr <- polr(factor(cyl) ~ wt, data = mtcars)
  cplot(cyl.plr, col = c("red", "purple", "blue"), what = "stacked")
  cplot(cyl.plr, what = "class")
}

}
}
\seealso{
\code{\link{plot.margins}}, \code{\link{persp.lm}}
}
\keyword{graphics}
